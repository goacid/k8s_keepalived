apiVersion: v1
kind: Namespace
metadata:
  name: kubealived-system
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubealived-config
  namespace: kubealived-system
data:
  keepalived.conf: |
    vrrp_instance VI_1 {
        state MASTER
        interface _INT_
        virtual_router_id _RID_
        priority 100
        advert_int 1
        authentication {
            auth_type PASS
            auth_pass _PASS_
        }
        virtual_ipaddress {
            _VIP_
        }
    }
  check_apiserver.sh: |
    #!/bin/sh
    errorExit() {
      echo "*** $*" 1>&2
      exit 1
    }
    APISERVER_DEST_PORT=6443
    APISERVER_VIP=_VIP_
    curl --silent --max-time 2 --insecure https://localhost:${APISERVER_DEST_PORT}/ -o /dev/null || errorExit "Error GET https://localhost:${APISERVER_DEST_PORT}/"
    if ip addr | grep -q ${APISERVER_VIP}; then
      curl --silent --max-time 2 --insecure https://${APISERVER_VIP}:${APISERVER_DEST_PORT}/ -o /dev/null || errorExit "Error GET https://${APISERVER_VIP}:${APISERVER_DEST_PORT}/"
    fi
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: kubealived
  namespace: kubealived-system
  labels:
    app: kubealived
spec:
  selector:
    matchLabels:
      app: kubealived
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: kubealived
    spec:
      hostNetwork: true
      containers:
      - name: kubealived
        image: goacid/keepalived:latest
        securityContext:
          capabilities:
            add: ["NET_ADMIN",'NET_BROADCAST','NET_RAW']
        volumeMounts:
        - name: config
          mountPath: /etc/keepalived
      volumes:
      - name: config
        configMap:
          name: kubealived-config
        
